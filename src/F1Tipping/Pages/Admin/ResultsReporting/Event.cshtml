@page
@model F1Tipping.Pages.Admin.ResultsReporting.EventModel
@section Scripts
{
    <script type="text/javascript">
        function addRow(btn) {
            // Nav up to the row the button is on.
            btn = btn.parentElement.parentElement;
            var newRow = btn.previousElementSibling.cloneNode(true);
            var newIndex = Math.max(...Array.from(
                    btn.parentElement.children, x=>x.children[0])
                .filter((n) => n && n?.type == "hidden" && n?.name == "index")
                .map(n => n.value))+1;
            newRow.children[0].value = newIndex;
            newRow.querySelectorAll('input, select').forEach(n =>
                {
                    n.id = n.id.replace(/\d+/, newIndex);
                    n.name = n.name.replace(/\d+/, newIndex);
                    if (n.id.includes("HolderId"))
                    {
                        n.value = "";
                    }
                });
            btn.insertAdjacentElement('beforebegin', newRow);
        }
    </script>
}

@{
    ViewData["Title"] = "Results Entry";
}

<partial name="_StatusMessage" model="Model.StatusMessage" />
<h1>@(Model.EventTitle)</h1>
@using (Html.BeginForm(FormMethod.Post))
{
    <div class="row">
        @(Html.HiddenFor(m => m.EventId))
        <div class="col">
            @Html.DisplayNameFor(m => Model.Results[0].TypeOfResult)
        </div>
        <div class="col">
            @Html.DisplayNameFor(m => Model.Results[0].HolderId)
        </div>
        <div class="col">
        </div>
    </div>

    @for (var i = 0; i < Model.Results.Count(); i++)
    {
        <div class="row">
            @(Html.Hidden("index", i))
            <div class="col">
                @(Html.HiddenFor(m => m.Results[i].TypeOfResult))
                @(Html.DisplayFor(m => m.Results[i].TypeOfResult))
            </div>
            <div class="col">
                @Html.DropDownListFor(m => m.Results[i].HolderId, Model.Results[i].Candidates)
            </div>
            <div class="col">
            </div>
        </div>

        @if (Model.Results[i].MultiEntity &&
            (i == Model.Results.Count() - 1
                || Model.Results[i+1].TypeOfResult != Model.Results[i].TypeOfResult))
        {
            <div class="row">
                <div class="form-group">
                    <button class="btn btn-primary"
                        id=@("Add_"+Model.Results[i].TypeOfResult.ToString())
                        type="button" onclick="addRow(this)">
                        +1 Row
                    </button>
                </div>
            </div>
        }
    }

    <div class="row pt-1">
        <div class="form-group">
            <input type="submit" value="Save" class="btn btn-primary" />
        </div>
    </div>
}
