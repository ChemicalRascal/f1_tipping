@page
@model F1Tipping.Pages.Tipping.EventModel
@{
    ViewData["Title"] = "Tip An Event";
}

<partial name="_StatusMessage" model="Model.StatusMessage" />
<h1>@(Model.EventTitle)</h1>
<div class="row">
    <div class="col-3"></div>
    <div class="col-3">Selections</div>
    @if (Model.DisplayResults)
    {
        <div class="col-3">Results</div>
        <div class="col-3">Points</div>
    }
</div>
@using (Html.BeginForm(FormMethod.Post))
{
    <input type="hidden" name="EventId" value="@Model.EventId" />
    @for (var i = 0; i < Model.IncomingTips.Count(); i++)
    {
        <div class="row">
            <div class="col-3">
                @Html.ValidationMessageFor(m => m.IncomingTips[i].TargetType)
                @Html.DisplayFor(m => m.IncomingTips[i].TargetType)
                @Html.HiddenFor(m => m.IncomingTips[i].TargetType)
            </div>
            <div class="col-3">
                @Html.ValidationMessageFor(m => m.IncomingTips[i].Selection)
                @Html.DropDownListFor(m => m.IncomingTips[i].Selection,
                         Model.TipSelections[i], "Select...", Model.Lockout ? new { disabled = "disabled" } : new { })
            </div>
            @if (Model.DisplayResults)
            {
                <div class="col-3">
                    @if (Model.ReportMap?[Model.IncomingTips[i].TargetType]?.Tip.Target is F1Tipping.Model.MultiEntityResult meResult)
                    {
                        @if (meResult.ResultHolders?.Any() ?? true)
                        {
                            @foreach (var rh in meResult.ResultHolders!)
                            {
                                @(rh.DisplayName)<br />
                            }
                        }
                        else
                        {
                            <span>No @Html.DisplayFor(m => m.IncomingTips[i].TargetType) recorded.</span>
                        }
                    }
                    else if (Model.ReportMap?[Model.IncomingTips[i].TargetType]?.Tip.Target is F1Tipping.Model.Result result)
                    {
                        @if (result.ResultHolder is not null)
                        {
                            @(result.ResultHolder.DisplayName)
                        }
                        else
                        {
                            <span>No @Html.DisplayFor(m => m.IncomingTips[i].TargetType) recorded.</span>
                        }
                    }
                </div>
                <div class="col-3">
                    @(Model.ReportMap?[Model.IncomingTips[i].TargetType]?.Score.ToString() ?? string.Empty)
                </div>
            }
        </div>
    }
    <input type="submit" value="Submit Tips" class="btn btn-primary" @(Model.Lockout ? "disabled=\"disabled\"" : "") />
}
